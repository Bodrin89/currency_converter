---
name: Build and deploy
on  :
  push:
    branches:
      - master
jobs:
#  build_and_push:
#    runs-on: ubuntu-latest
#    steps:
#      - name: clone code
#        uses: actions/checkout@v2
#      - name: docker build
#        run: docker build -t vladimirbodrin/currency_converter:$GITHUB_REF_NAME-$GITHUB_RUN_ID -f docker/deploy/Dockerfile .
#      - name: docker_login
#        run: echo ${{ secrets.DOCKERHUB_TOKEN }} | docker login -u ${{ secrets.DOCKERHUB_USERNAME }} --password-stdin
#      - name: docker push
#        run: docker push vladimirbodrin/currency_converter:$GITHUB_REF_NAME-$GITHUB_RUN_ID
  deploy:
    runs-on: ubuntu-latest
#    needs: build_and_push
    steps:

      - name: Copy on server
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERV_HOST }}
          username: ${{ secrets.SERV_USERNAME }}
          password: ${{ secrets.SERV_PASSWORD }}

          run: mkdir currency_converter
          source: docker/*
          target: currency_converter
          strip_components: 1
      - name: render docker-compose
        run: |
          mkdir currency_converter
          cat docker/deploy/docker-compose.yaml | envsubst > currency_converter/docker-compose.yaml
      - name: Copy docker-compose
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SERV_HOST }}
          username: ${{ secrets.SERV_USERNAME }}
          password: ${{ secrets.SERV_PASSWORD }}
          source: currency_converter/docker-compose.yaml
          target: currency_converter
          strip_components: 1

      - name: Run compose
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERV_HOST }}
          username: ${{ secrets.SERV_USERNAME }}
          password: ${{ secrets.SERV_PASSWORD }}
          script: |
            cd currency_converter
            docker-compose pull
            docker-compose up -d
      - name: Cleanup
        if: always()
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.SERV_HOST }}
          username: ${{ secrets.SERV_USERNAME }}
          password: ${{ secrets.SERV_PASSWORD }}
          script: |
            docker system prune -a -f
